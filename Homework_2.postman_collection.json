{
	"info": {
		"_postman_id": "131606f3-2c9f-4451-8dff-8174e26215aa",
		"name": "Homework_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18753445"
	},
	"item": [
		{
			"name": "1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    let responseData = pm.response.json();\r",
							"    console.log(responseData)\r",
							"\r",
							"\r",
							"pm.test(\"Name checking\", function () {\r",
							"    pm.expect(responseData.name).to.eql(\"Natalya\");\r",
							"});\r",
							"\r",
							"pm.test(\"Age checking\", function () {\r",
							"    pm.expect(responseData.age).to.eql(\"30\");\r",
							"});\r",
							"\r",
							"pm.test(\"Salary checking\", function () {\r",
							"    pm.expect(responseData.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"    let requestData = request.data;\r",
							"    console.log(requestData)\r",
							"\r",
							"pm.test(\"Name from response equals name from request\", function () {\r",
							"    pm.expect(responseData.name).to.eql(requestData.name);\r",
							"});\r",
							"\r",
							"    pm.test(\"Age from response equals age from request\", function ()\r",
							"    {pm.expect(responseData.age).to.eql(requestData.age);});\r",
							"\r",
							"        pm.test(\"Salary from response equals salary from request\", function ()\r",
							"    {pm.expect(responseData.salary).to.eql(+requestData.salary);}); // + для приведения к строчного значения к числовому\r",
							"\r",
							"    console.log(responseData.family)\r",
							"\r",
							"            pm.test(\"Salary after 1.5 years from response equals salary*4 from request\", function ()\r",
							"    {pm.expect(responseData.family.u_salary_1_5_year).to.eql(requestData.salary*4);});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Natalya",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    let responseData = pm.response.json();\r",
							"    console.log(responseData)\r",
							"\r",
							"    let requestData = pm.request.url.query.toObject() //через url т.к. get запрос и данные находятся в url\r",
							"    console.log(requestData)\r",
							"\r",
							"pm.test(\"Name from response equals name from request\", function () {\r",
							"    pm.expect(responseData.name).to.eql(requestData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from response equals age from request\", function ()\r",
							"{pm.expect(responseData.age).to.eql(requestData.age);});\r",
							"\r",
							"pm.test(\"Salary from response equals salary from request\", function ()\r",
							"    {pm.expect(responseData.salary).to.eql(+requestData.salary);});\r",
							"\r",
							"console.log(responseData.family)\r",
							"\r",
							"\r",
							"pm.test(\"Dog has name\", function() {\r",
							"  pm.expect(responseData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"    pm.test(\"Dog has age\", function()\r",
							"    {pm.expect(responseData.family.pets.dog).to.have.property(\"age\");});\r",
							"\r",
							"pm.test(\"Dog's name is Luky\", function () {\r",
							"    pm.expect(responseData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Dog's age is 4\", function () {\r",
							"    pm.expect(responseData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Natalya&age=30&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Natalya"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"    let responseData = pm.response.json();\r",
							"    console.log(responseData)\r",
							"\r",
							"    let requestData = pm.request.url.query.toObject() \r",
							"    console.log(requestData)\r",
							"\r",
							"    pm.test(\"Name from response equals name from request\", function ()\r",
							"    {pm.expect(responseData.name).to.eql(requestData.name);});\r",
							"\r",
							"    pm.test(\"Age from response equals age from request\", function ()\r",
							"    {pm.expect(responseData.age).to.eql(+requestData.age);});\r",
							"\r",
							"    console.log(requestData.salary)\r",
							"\r",
							"    console.log(responseData.salary)\r",
							"\r",
							"    console.log(responseData.salary[0])\r",
							"\r",
							"    console.log(responseData.salary[1])\r",
							"\r",
							"    console.log(responseData.salary[2])\r",
							"\r",
							"        pm.test(\"Salary[0] from response equals salary from request\", function ()\r",
							"    {pm.expect(responseData.salary[0]).to.eql(+requestData.salary);});\r",
							"\r",
							"        pm.test(\"Salary[1] from response equals salary*2 from request\", function ()\r",
							"    {pm.expect(+responseData.salary[1]).to.eql(requestData.salary*2);});\r",
							"\r",
							"        pm.test(\"Salary[2] from response equals salary*3 from request\", function ()\r",
							"    {pm.expect(+responseData.salary[2]).to.eql(requestData.salary*3);});\r",
							"\r",
							"\r",
							"let name_response = responseData.name\r",
							"pm.environment.set(\"name\", name_response);\r",
							"\r",
							"      let age_response = responseData.age\r",
							"      pm.environment.set(\"age\", age_response);\r",
							"\r",
							"      let salary_response = responseData.salary[0]\r",
							"      pm.environment.set(\"salary\", salary_response);\r",
							"\r",
							"let salary_data = responseData.salary\r",
							"let salary_length = salary_data.length\r",
							"let start = 0\r",
							"while(start < salary_length){\r",
							"    console.log(salary_data[start])\r",
							"start++}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Natalya&age=30&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Natalya"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"console.log(responseData)\r",
							"\r",
							"let requestData = request.data;\r",
							"console.log(requestData)\r",
							"\r",
							"    pm.test(\"Response has start_qa_salary\", function()\r",
							"    {pm.expect(responseData).to.have.property(\"start_qa_salary\");});\r",
							"\r",
							"    pm.test(\"Response has qa_salary_after_6_months\", function()\r",
							"    {pm.expect(responseData).to.have.property(\"qa_salary_after_6_months\");});\r",
							"\r",
							"    pm.test(\"Response has qa_salary_after_12_months\", function()\r",
							"    {pm.expect(responseData).to.have.property(\"qa_salary_after_12_months\");});\r",
							"\r",
							"    pm.test(\"Response has qa_salary_after_1.5_year\", function()\r",
							"    {pm.expect(responseData).to.have.property(\"qa_salary_after_1.5_year\");});\r",
							"\r",
							"    pm.test(\"Response has qa_salary_after_3.5_years\", function()\r",
							"    {pm.expect(responseData).to.have.property(\"qa_salary_after_3.5_years\");});\r",
							"\r",
							"    pm.test(\"Response has person\", function()\r",
							"    {pm.expect(responseData).to.have.property(\"person\");});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(responseData.value).to.eql(requestData.value);\r",
							"});\r",
							"\r",
							"    pm.test(\"Start_qa_salary from response equals salary from request\", function ()\r",
							"    {pm.expect(responseData.start_qa_salary).to.eql(+requestData.salary);});\r",
							"\r",
							"    pm.test(\"Qa_salary_after_6_months from response equals salary*2 from request\", function ()\r",
							"    {pm.expect(responseData.qa_salary_after_6_months).to.eql(requestData.salary*2);});\r",
							"\r",
							"    pm.test(\"Qa_salary_after_12_months from response equals salary*2.7 from request\", function ()\r",
							"    {pm.expect(responseData.qa_salary_after_12_months).to.eql(requestData.salary*2.7);});\r",
							"\r",
							"    pm.test(\"Qa_salary_after_1.5_year from response equals salary*3.3 from request\", function ()\r",
							"    {pm.expect(responseData[\"qa_salary_after_1.5_year\"]).to.eql(requestData.salary*3.3);}); // responseData[\"qa_salary_after_1.5_year\"] - т.к. в параметре есть . (1.5), chai \r",
							"\r",
							"    pm.test(\"Qa_salary_after_3.5_years from response equals salary*3.8 from request\", function ()\r",
							"    {pm.expect(responseData[\"qa_salary_after_3.5_years\"]).to.eql(requestData.salary*3.8);});\r",
							"\r",
							"    pm.test(\"Person's u_name[1] from response equals salary from request\", function ()\r",
							"    {pm.expect(responseData.person.u_name[1]).to.eql(+requestData.salary);});\r",
							"\r",
							"    pm.test(\"Person's u_name from response equals salary from request\", function ()\r",
							"    {pm.expect(responseData.person.u_age).to.eql(+requestData.age);});\r",
							"\r",
							"for (let person in responseData.person) {\r",
							"    console.log(person)}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}